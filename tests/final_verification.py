# tests/final_verification.py
import sys
import os
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π
project_root = os.path.dirname(os.path.dirname(__file__))
sys.path.insert(0, os.path.join(project_root, 'src'))


def final_verification():
    print("üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –õ–û–ì–û–í –ö–û–õ–õ–ï–ö–¢–û–†–ê")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –ª–æ–≥–æ–≤
    log_file = os.path.join(project_root, "logs", "model.log.jsonl")

    if not os.path.exists(log_file):
        print("‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

    with open(log_file, 'r', encoding='utf-8') as f:
        lines = f.readlines()

    print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–µ: {len(lines)}")

    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏
    collect_logs = []
    complete_sets = 0
    received_results = 0

    for line in lines:
        try:
            log_data = json.loads(line.strip())
            logger_name = log_data.get('logger', '')
            message = log_data.get('message', '')

            if 'collect' in logger_name:
                collect_logs.append(log_data)

                if 'Complete set' in message or 'COMPLETE_SET' in message:
                    complete_sets += 1
                if 'Received result' in message or 'Channel:' in message:
                    received_results += 1

        except:
            continue

    print(f"üîç –õ–æ–≥–æ–≤ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–∞: {len(collect_logs)}")
    print(f"üéØ –ü–æ–ª–Ω—ã—Ö –Ω–∞–±–æ—Ä–æ–≤: {complete_sets}")
    print(f"üì® –ü–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {received_results}")

    # –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–º–µ—Ä—ã –ª–æ–≥–æ–≤
    if collect_logs:
        print("\nüìù –ü–†–ò–ú–ï–†–´ –õ–û–ì–û–í –ö–û–õ–õ–ï–ö–¢–û–†–ê:")
        for log in collect_logs[:5]:  # –ü–µ—Ä–≤—ã–µ 5 –ª–æ–≥–æ–≤
            print(f"   [{log.get('level')}] {log.get('message')}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞
    success = (
            len(collect_logs) >= 8 and  # –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –ª–æ–≥–∏ –æ—Ç –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤
            complete_sets >= 1 and  # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä
            received_results >= 8  # –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –ª–æ–≥–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    )

    if success:
        print("\nüéâ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –†–ï–®–ï–ù–´! –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("   ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
        print("   ‚úÖ –ö–æ–ª–ª–µ–∫—Ç–æ—Ä –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ")
        print("   ‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("   ‚úÖ –õ–æ–≥–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ —Ñ–∞–π–ª")
    else:
        print("\n‚ö†Ô∏è  –ï—Å—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç")

    return success


if __name__ == "__main__":
    final_verification()